        <!--
           Copyright 2010-2020 Norconex Inc.

           Licensed under the Apache License, Version 2.0 (the "License");
           you may not use this file except in compliance with the License.
           You may obtain a copy of the License at

               https://www.apache.org/licenses/LICENSE-2.0

           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
         -->
        <!--  This configuration shows the minimum required and basic recommendations
             to run a crawler.
              -->
<httpcollector id="Minimum Config HTTP Collector">
    <!--  Decide where to store generated files.  -->
    <workDir>./examples-output/complex</workDir>
    <logsDir>./logs</logsDir>
    <progressDir>./progress</progressDir>
    <crawlers>
        <crawler id="athensvoice">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.athensvoice.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>
<!--                <filter-->
<!--                        class="ReferenceFilter"-->
<!--                        onMatch="exclude">-->
<!--                    <valueMatcher-->
<!--                            method="regex">-->
<!--                        https://www.athensvoice.gr/tags/.*-->
<!--                    </valueMatcher>-->
<!--                </filter>-->

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>

                    <handler class="com.norconex.importer.handler.tagger.impl.DOMTagger">
                        <dom selector="time[itemprop='datePublished']" extract="attr(datetime)" toField="published_date"   onSet="replace"/>
                    </handler>


<!--                    <handler class="com.norconex.importer.handler.tagger.impl.DOMTagger">-->
<!--                        <dom-->
<!--                                selector="time"-->
<!--                                toField="published_date"/>-->

<!--                    </handler>-->



                    <handler
                            class="DeleteTagger">
                        <fieldMatcher
                                method="basic">
                            collector.referrer-link-attr
                        </fieldMatcher>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->




<!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
<!--                                                                <fieldMatcher>-->
<!--                                                                    published_date-->
<!--                                                                </fieldMatcher>-->
<!--                                                                <pattern-->
<!--                                                                        toField="published_date2"-->
<!--                                                                        valueGroup="1">-->
<!--                                                                    ^((\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?)$)-->
<!--                                                                </pattern>-->
<!--                                                            </handler>-->


                    <!--                    <filter-->
<!--                            class="com.norconex.collector.core.filter.impl.MetadataFilter"-->
<!--                            onMatch="exclude">-->
<!--                        <fieldMatcher-->
<!--                                field="document.reference"-->
<!--                                type="regex"-->
<!--                                operation="equals"-->
<!--                                caseSensitive="false"-->
<!--                                value="https://www.athensvoice.gr/tags.*"-->
<!--                                onMatch="exclude" />-->
<!--                    </filter>-->



<!--                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"-->
<!--                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >-->
<!--                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>-->
<!--                    </handler>-->

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="published_date" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ss'Z'</fromFormat>

                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>

                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="liberal">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.liberal.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

<!--                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">-->
<!--                        <restrictTo>-->
<!--                            <fieldMatcher method="csv">content</fieldMatcher>-->
<!--                            <valueMatcher method="regex">.*</valueMatcher>-->
<!--                        </restrictTo>-->
<!--                        <command>python3 scripts/sentiment_analysis.py</command>-->
<!--                        <metadata inputFormat="properties" outputFormat="properties">-->
<!--                            <pattern toField="sentiment_score" onSet="replace">-->
<!--                                (.*)-->
<!--                            </pattern>-->
<!--                        </metadata>-->
<!--                    </handler>-->

<!--                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"  onSet="replace"  fromField="last-modified" fromLocale="el_GR"  toLocale="el_GR"-->
<!--                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss">-->
<!--                        <fromFormat>EEE, dd MMM yyyy HH:mm:ss zzz</fromFormat>-->
<!--                    </handler>-->

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"
                            fromField="last-modified"
                            toField="published_date"
                            toFormat="yyyy-MM-dd'T'HH:mm:ss">
                        <fromFormat>EEE, dd MMM yyyy HH:mm:ss zzz</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DeleteTagger">
                        <fieldMatcher method="basic">
                            collector.referrer-link-attr
                        </fieldMatcher>
                        <fieldMatcher method="basic">
                            referrer-link-attr
                        </fieldMatcher>
                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>

                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>

                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="ingr">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.in.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">
                        <restrictTo>
                            <fieldMatcher method="csv">content</fieldMatcher>
                            <valueMatcher method="regex">.*</valueMatcher>
                        </restrictTo>
                        <command>python3 scripts/sentiment_analysis.py</command>
                        <metadata inputFormat="properties" outputFormat="properties">
                            <pattern toField="sentiment_score" onSet="replace">
                                (.*)
                            </pattern>
                        </metadata>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="article:published_time" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>

                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="newsbomb">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.newsbomb.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">
                        <restrictTo>
                            <fieldMatcher method="csv">content</fieldMatcher>
                            <valueMatcher method="regex">.*</valueMatcher>
                        </restrictTo>
                        <command>python3 scripts/sentiment_analysis.py</command>
                        <metadata inputFormat="properties" outputFormat="properties">
                            <pattern toField="sentiment_score" onSet="replace">
                                (.*)
                            </pattern>
                        </metadata>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="article:published_time" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>

                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="newit">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.newsit.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                                        <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">
                                            <fieldMatcher>
                                                temp.url
                                            </fieldMatcher>
                                            <pattern
                                                    toField="domain.url"
                                                    valueGroup="1">
                                                (https?://[^/]+)
                                            </pattern>
                                        </handler>
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">
                        <restrictTo>
                            <fieldMatcher method="csv">content</fieldMatcher>
                            <valueMatcher method="regex">.*</valueMatcher>
                        </restrictTo>
                        <command>python3 scripts/sentiment_analysis.py</command>
                        <metadata inputFormat="properties" outputFormat="properties">
                            <pattern toField="sentiment_score" onSet="replace">
                                (.*)
                            </pattern>
                        </metadata>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="article:published_time" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>

                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="capital">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.capital.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>

                    <handler class="DeleteTagger">
                                            <fieldMatcher
                                                    method="basic">
                                                collector.referrer-link-attr
                                            </fieldMatcher>
                                            <fieldMatcher
                                                    method="basic">
                                                referrer-link-attr
                                            </fieldMatcher>
                    </handler>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>


                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

<!--                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">-->
<!--                        <restrictTo>-->
<!--                            <fieldMatcher method="csv">content</fieldMatcher>-->
<!--                            <valueMatcher method="regex">.*</valueMatcher>-->
<!--                        </restrictTo>-->
<!--                        <command>python3 scripts/sentiment_analysis.py</command>-->
<!--                        <metadata inputFormat="properties" outputFormat="properties">-->
<!--                            <pattern toField="sentiment_score" onSet="replace">-->
<!--                                (.*)-->
<!--                            </pattern>-->
<!--                        </metadata>-->
<!--                    </handler>-->



                    <handler
                            class="com.norconex.importer.handler.tagger.impl.RegexTagger"
                            sourceCharset="UTF-8">

                        <pattern
                                toField="published_date"
                                valueGroup="0"
                                ignoreCase="false"
                                ignoreDiacritic="false"
                                multiline="true">
                            (Δευτέρα|Τρίτη|Τετάρτη|Πέμπτη|Παρασκευή|Σάββατο|Κυριακή), \d{1,2}-\p{L}+-\d{4} \d{2}:\d{2}
                        </pattern>
                    </handler>









                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"-->
<!--                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >-->
<!--                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>-->
<!--                    </handler>-->

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="published_date" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>EEEE, dd-MMM-yyyy HH:mm</fromFormat>

                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>


                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="parapolitika">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.parapolitika.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">
                        <restrictTo>
                            <fieldMatcher method="csv">content</fieldMatcher>
                            <valueMatcher method="regex">.*</valueMatcher>
                        </restrictTo>
                        <command>python3 scripts/sentiment_analysis.py</command>
                        <metadata inputFormat="properties" outputFormat="properties">
                            <pattern toField="sentiment_score" onSet="replace">
                                (.*)
                            </pattern>
                        </metadata>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="article:published_time" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>


                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="iefimerida">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.iefimerida.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>

                    <handler class="com.norconex.importer.handler.tagger.impl.DOMTagger">
                        <dom
                                selector="time"
                                toField="published_date"/>

                    </handler>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

<!--                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">-->
<!--                        <restrictTo>-->
<!--                            <fieldMatcher method="csv">content</fieldMatcher>-->
<!--                            <valueMatcher method="regex">.*</valueMatcher>-->
<!--                        </restrictTo>-->
<!--                        <command>python3 scripts/sentiment_analysis.py</command>-->
<!--                        <metadata inputFormat="properties" outputFormat="properties">-->
<!--                            <pattern toField="sentiment_score" onSet="replace">-->
<!--                                (.*)-->
<!--                            </pattern>-->
<!--                        </metadata>-->
<!--                    </handler>-->

<!--                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"-->
<!--                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >-->
<!--                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>-->
<!--                    </handler>-->
                    <handler class="com.norconex.importer.handler.tagger.impl.DeleteTagger">
                                            <fieldMatcher method="basic">
                                                collector.referrer-link-attr
                                            </fieldMatcher>
                                            <fieldMatcher method="basic">
                                                referrer-link-attr
                                            </fieldMatcher>
                                        </handler>
                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="article:published_time" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
<!--                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>-->
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssZ</fromFormat>

                    </handler>


                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>


                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="lifo">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.lifo.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>5</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

<!--                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">-->
<!--                        <restrictTo>-->
<!--                            <fieldMatcher method="csv">content</fieldMatcher>-->
<!--                            <valueMatcher method="regex">.*</valueMatcher>-->
<!--                        </restrictTo>-->
<!--                        <command>python3 scripts/sentiment_analysis.py</command>-->
<!--                        <metadata inputFormat="properties" outputFormat="properties">-->
<!--                            <pattern toField="sentiment_score" onSet="replace">-->
<!--                                (.*)-->
<!--                            </pattern>-->
<!--                        </metadata>-->
<!--                    </handler>-->

                    <handler class="com.norconex.importer.handler.tagger.impl.DeleteTagger">
                                            <fieldMatcher method="basic">
                                                collector.referrer-link-attr
                                            </fieldMatcher>
                                            <fieldMatcher method="basic">
                                                referrer-link-attr
                                            </fieldMatcher>
                                        </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="Last-Modified" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                        <fromFormat>EEE, dd MMM yyyy HH:mm:ss zzz</fromFormat>

                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>


                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="gazetta">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.gazzetta.gr/</url>

                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

<!--                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">-->
<!--                        <restrictTo>-->
<!--                            <fieldMatcher method="csv">content</fieldMatcher>-->
<!--                            <valueMatcher method="regex">.*</valueMatcher>-->
<!--                        </restrictTo>-->
<!--                        <command>python3 scripts/sentiment_analysis.py</command>-->
<!--                        <metadata inputFormat="properties" outputFormat="properties">-->
<!--                            <pattern toField="sentiment_score" onSet="replace">-->
<!--                                (.*)-->
<!--                            </pattern>-->
<!--                        </metadata>-->
<!--                    </handler>-->

                    <handler class="com.norconex.importer.handler.tagger.impl.DeleteTagger">
                                            <fieldMatcher method="basic">
                                                collector.referrer-link-attr
                                            </fieldMatcher>
                                            <fieldMatcher method="basic">
                                                referrer-link-attr
                                            </fieldMatcher>
                                        </handler>

<!--                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"-->
<!--                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >-->
<!--                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>-->
<!--                    </handler>-->


                                        <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">
                                                                                    <fieldMatcher>
                                                                                        published_date
                                                                                    </fieldMatcher>
                                                                                    <pattern
                                                                                            toField="published_date2"
                                                                                            valueGroup="1">
                                                                                        ^((\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)((-(\d{2}):(\d{2})|Z)?)$)
                                                                                    </pattern>
                                                                                </handler>


                    <handler
                            class="com.norconex.importer.handler.tagger.impl.DOMTagger">
                        <dom
                                selector="time.authoring__time"
                                toField="published_date"
                                extract="text" />
                    </handler>


<!--                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="Last-Modified" fromLocale="el_GR"  toLocale="el_GR"-->
<!--                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >-->
<!--&lt;!&ndash;                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>&ndash;&gt;-->
<!--                        <fromFormat>EEE, dd MMM yyyy HH:mm:ss zzz</fromFormat>-->

<!--                    </handler>-->

                                        <handler
                                                class="com.norconex.importer.handler.tagger.impl.RegexTagger"
                                                sourceCharset="UTF-8">

                                            <pattern
                                                    toField="published_date"
                                                    valueGroup="0"
                                                    ignoreCase="false"
                                                    ignoreDiacritic="false"
                                                    multiline="true">
                                                (\d{1,2})\s(Απριλίου|Φεβρουαρίου|Ιανουαρίου|Μαρτίου|Μαΐου|Ιουνίου|Ιουλίου|Αυγούστου|Σεπτεμβρίου|Οκτωβρίου|Νοεμβρίου|Δεκεμβρίου)\s(\d{4})\s-\s(\d{2}:\d{2})
                                            </pattern>
                                        </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="published_date" fromLocale="el_GR"  toLocale="el_GR"
                                                 toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
<!--                                            <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>-->
                        <fromFormat>d MMMM yyyy - HH:mm</fromFormat>

                    </handler>
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>

                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="protothema">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <url>https://www.protothema.gr/</url>
                <!--                <url>https://www.enikos.gr/</url>-->


                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">
                        <restrictTo>
                            <fieldMatcher method="csv">content</fieldMatcher>
                            <valueMatcher method="regex">.*</valueMatcher>
                        </restrictTo>
                        <command>python3 scripts/sentiment_analysis.py</command>
                        <metadata inputFormat="properties" outputFormat="properties">
                            <pattern toField="sentiment_score" onSet="replace">
                                (.*)
                            </pattern>
                        </metadata>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="article:published_time" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DeleteTagger">
                        <fieldMatcher method="basic">
                            collector.referrer-link-attr
                        </fieldMatcher>
                        <fieldMatcher method="basic">
                            referrer-link-attr
                        </fieldMatcher>
                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>


                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
       <crawler id="enikos">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">
                <!--                <url>https://www.protothema.gr/</url>-->
                <url>https://www.enikos.gr/</url>


                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>                                                                                   

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">
                        <restrictTo>
                            <fieldMatcher method="csv">content</fieldMatcher>
                            <valueMatcher method="regex">.*</valueMatcher>
                        </restrictTo>
                        <command>python3 scripts/sentiment_analysis.py</command>
                        <metadata inputFormat="properties" outputFormat="properties">
                            <pattern toField="sentiment_score" onSet="replace">
                                (.*)
                            </pattern>
                        </metadata>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="article:published_time" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>


                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>

                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="0000000000000000000000000000000000000000000000033333333333333000000002">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">

                <url>https://www.efsyn.gr/</url>
                <!--                <url>https://www.documentonews.gr</url>-->
                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

<!--                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">-->
<!--                        <restrictTo>-->
<!--                            <fieldMatcher method="csv">content</fieldMatcher>-->
<!--                            <valueMatcher method="regex">.*</valueMatcher>-->
<!--                        </restrictTo>-->
<!--                        <command>python3 scripts/sentiment_analysis.py</command>-->
<!--                        <metadata inputFormat="properties" outputFormat="properties">-->
<!--                            <pattern toField="sentiment_score" onSet="replace">-->
<!--                                (.*)-->
<!--                            </pattern>-->
<!--                        </metadata>-->
<!--                    </handler>-->

                    <handler
                            class="com.norconex.importer.handler.tagger.impl.RegexTagger"
                            sourceCharset="UTF-8">

                        <pattern
                                toField="published_date"
                                valueGroup="0"
                                ignoreCase="false"
                                ignoreDiacritic="false"
                                multiline="true">
                            (\d{2}\.\d{2}\.\d{4}, \d{2}:\d{2})
                        </pattern>
                    </handler>
                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                        <fromFormat>dd.mm.yyyy, hh:mm</fromFormat>

                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="Last-Modified" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                        <fromFormat>EEE, dd MMM yyyy HH:mm:ss zzz</fromFormat>
                        <fromFormat>dd.mm.yyyy, hh:mm</fromFormat>


                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="published_date" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >

                        <fromFormat>dd.mm.yyyy, hh:mm</fromFormat>


                    </handler>

                                        <handler class="com.norconex.importer.handler.tagger.impl.DeleteTagger">
                                            <fieldMatcher method="basic">
                                                collector.referrer-link-attr
                                            </fieldMatcher>
                                            <fieldMatcher method="basic">
                                                referrer-link-attr
                                            </fieldMatcher>
                                        </handler>






                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->

                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script>
                                            <![CDATA[
                            var publishedDates = metadata.getStrings("published_date");
                            if (publishedDates != null && publishedDates.size() > 0) {
                                metadata.setString("published_date", publishedDates.get(0));
                            }
                        ]]>
                        </script>
                    </handler>

                    <handler class="KeepOnlyTagger">
                            <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>





                </postParseHandlers>
            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>

                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>
        <crawler id="documento">
            <!--  Requires at least one start URL (or urlsFile).
                       Optionally limit crawling to same protocol/domain/port as
                       start URLs.  -->
            <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">


                <url>https://www.documentonews.gr</url>
                <!--                <url>https://www.enikos.gr/arthra/o-papadiamantis-tis-christougenniatikis-agalliasis-3/1902892/</url>-->

            </startURLs>
            <maxDepth>5</maxDepth>


            <numThreads>2</numThreads>
            <sitemapResolver ignore="true"/>
            <!--  Be as nice as you can to sites you crawl.  -->
            <delay default="5 seconds"/>
            <documentFilters>

                <filter
                        class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"  onMatch="exclude">
                    png,jpg,jpeg,gif,css,js,ico,svg,woff,woff2,ttf,eot,otf,xml,txt,doc,docx,pdf,mp4,mp3,avi,flv,wmv,zip,rar,7z,exe,apk,iso,ap
                </filter>

<!--                <filter-->
<!--                        class="com.norconex.collector.core.filter.impl.MetadataFilter"-->
<!--                        onMatch="exclude">-->
<!--                    <fieldMatcher>published_date</fieldMatcher>-->
<!--                    <valueMatcher method="regex">^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$</valueMatcher>-->
<!--                </filter>-->
            </documentFilters>




            <!--  Document importing  -->
            <importer>

                <preParseHandlers>
                    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
                        <script><![CDATA[
                        var referenceField = "document.reference";
                        var domainField = "domain.url";
                        var reference = metadata.getString(referenceField);

                        if (reference) {
                          var domain = new java.net.URL(reference).getProtocol() + "://" + new java.net.URL(reference).getHost();
                          metadata.setString(domainField, domain);
                        }
                      ]]>
                        </script>
                    </handler>
                    <!--                    <handler class="com.norconex.importer.handler.tagger.impl.RegexTagger">-->
                    <!--                        <fieldMatcher>-->
                    <!--                            temp.url-->
                    <!--                        </fieldMatcher>-->
                    <!--                        <pattern-->
                    <!--                                toField="domain.url"-->
                    <!--                                valueGroup="1">-->
                    <!--                            (https?://[^/]+)-->
                    <!--                        </pattern>-->
                    <!--                    </handler>-->
                </preParseHandlers>

                <postParseHandlers>
                    <!-- Keep only specific fields -->

                    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">
                        <restrictTo>
                            <fieldMatcher method="csv">content</fieldMatcher>
                            <valueMatcher method="regex">.*</valueMatcher>
                        </restrictTo>
                        <command>python3 scripts/sentiment_analysis.py</command>
                        <metadata inputFormat="properties" outputFormat="properties">
                            <pattern toField="sentiment_score" onSet="replace">
                                (.*)
                            </pattern>
                        </metadata>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger" fromField="article:modified_time" fromLocale="el_GR"   toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"     onSet="replace"  fromField="article:published_time" fromLocale="el_GR"  toLocale="el_GR"
                             toField="published_date" toFormat="yyyy-MM-dd'T'HH:mm:ss" >
                        <fromFormat>yyyy-MM-dd'T'HH:mm:ssXXX</fromFormat>
                    </handler>

                    <!--                    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer">-->
                    <!--                        <fieldMatcher method="csv">temp_published_date</fieldMatcher>-->
                    <!--                        <replacePattern><![CDATA[(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})]]></replacePattern>-->
                    <!--                        <replacement><![CDATA[$1]]></replacement>-->
                    <!--                        <toField>published_date_single</toField>-->
                    <!--                    </handler>-->
                    <handler class="KeepOnlyTagger">
                        <fieldMatcher method="csv">published_date_single,Date,content,title,keywords,description,document.reference,sentiment_score,published_date,published_date2,domain.url,temp.url</fieldMatcher>
                    </handler>



                </postParseHandlers>



            </importer>
            <!--  Decide what to do with your files by specifying a Committer.  -->
            <committers>
                <committer
                        class="com.norconex.committer.elasticsearch.ElasticsearchCommitter">
                    <nodes>
                        http://localhost:9200
                    </nodes>


                    <indexName>norconex2</indexName>

                </committer>

            </committers>
        </crawler>












    </crawlers>
</httpcollector>